import {
  Container,
  TextField,
  Typography,
  Button,
  Avatar,
  CssBaseline,
  Box,
} from '@mui/material';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import * as React from 'react';
import { createTheme, ThemeProvider } from '@mui/material/styles';

import { useState } from 'react';
import './Login.scss';

function Login() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loginStatus, setLoginStatus] = useState('');

  const defaultTheme = createTheme();

  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setUsername(event.target.value);
  };

  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setPassword(event.target.value);
  };

  const handleLogin = () => {
    // Send email and password to server for authentication
    fetch('https://inventaireApi.csshc.gouv.qc.ca/api/login', {
      method: 'POST',
      body: JSON.stringify({ username, password }),
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then((response) => {
        if (response.ok) {
          response.json().then((data) => {
            // Set the user data in localStorage
            localStorage.setItem(
              'id_emplacement',
              JSON.stringify(data.emplacement)
            );
            localStorage.setItem('id_user', JSON.stringify(data.id));
            localStorage.setItem('id_role', JSON.stringify(data.id_role));
            // Set the cookie, using token value generated by backend
            document.cookie = `CookieLogged=${data.token}; expires=${new Date(
              Date.now() + 60 * 24 * 60 * 60 * 1000
            ).toUTCString()}; path=/`;
            // Redirect to the home page
            window.location.href = '/';
          });
        } else {
          // Display error message if login is unsuccessful
          setLoginStatus('Information érronée');
        }
      })
      .catch((error) => {
        console.error('Error:', error);
        setLoginStatus('Problème de serveur : ' + error);
      });
  };

    const bypass = () => {
        document.cookie = `CookieLogged=${'Minou'}; expires=${new Date(
          Date.now() + 60 * 24 * 60 * 60 * 1000
        ).toUTCString()}; path=/`;
        localStorage.setItem('id_user', '1');
        window.location.href = '/';
      };

  return (
    <ThemeProvider theme={defaultTheme}>
      <Container component="main" maxWidth="xs">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>
            <LockOutlinedIcon />
          </Avatar>
          <Typography component="h1" variant="h5">
            Inventaire ICSSHC
          </Typography>
          <Box
            component="form"
            onSubmit={handleLogin}
            noValidate
            sx={{ mt: 1 }}
          >
            <TextField
              margin="normal"
              required
              fullWidth
              id="username"
              label="MRodrigue"
              name="username"
              autoComplete="username"
              autoFocus
              onChange={handleUsernameChange}
            />
            <TextField
              margin="normal"
              required
              fullWidth
              name="password"
              label="Password"
              type="password"
              id="password"
              autoComplete="current-password"
              onChange={handlePasswordChange}
            />
            <Typography margin="normal" color="error">
              {loginStatus}
            </Typography>

            <Button
              onClick={handleLogin}
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
            >
              Se connecter
            </Button>
           { <Button
              onClick={bypass}
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
            >
              bypass
        </Button>}
          </Box>
        </Box>
      </Container>
    </ThemeProvider>
  );
}

export default Login; // Don’t forget to use export default!
